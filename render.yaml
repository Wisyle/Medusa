services:
  # Static Site Service - Fast CDN-enabled frontend
  - type: web
    name: tar-lighthouse-static
    env: static
    staticPublishPath: ./static
    pullRequestPreviewsEnabled: true
    buildCommand: ""
    routes:
      - type: rewrite
        source: /api/*
        destination: https://tar-lighthouse-api.onrender.com/api/*
      - type: rewrite
        source: /auth/*
        destination: https://tar-lighthouse-api.onrender.com/auth/*
      - type: rewrite
        source: /login
        destination: https://tar-lighthouse-api.onrender.com/login
      - type: rewrite
        source: /logout
        destination: https://tar-lighthouse-api.onrender.com/logout
      - type: rewrite
        source: /security-setup
        destination: https://tar-lighthouse-api.onrender.com/security-setup
      - type: rewrite
        source: /setup-2fa
        destination: https://tar-lighthouse-api.onrender.com/setup-2fa
      - type: rewrite
        source: /register
        destination: https://tar-lighthouse-api.onrender.com/register
      - type: rewrite
        source: /dashboard
        destination: https://tar-lighthouse-api.onrender.com/dashboard
      - type: rewrite
        source: /instances/*
        destination: https://tar-lighthouse-api.onrender.com/instances/*
      - type: rewrite
        source: /ws
        destination: https://tar-lighthouse-api.onrender.com/ws
      - type: rewrite
        source: /*
        destination: /index.html

  # API Backend Service - API only, no static files
  - type: web
    name: tar-lighthouse-api
    env: python
    plan: starter
    region: singapore
    buildCommand: "pip install -r requirements.txt"
    startCommand: "export PYTHONPATH=/opt/render/project/src && uvicorn app.main:app --host 0.0.0.0 --port $PORT --timeout-keep-alive 120"
    autoDeploy: true
    healthCheckPath: /api/health
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: tar-lighthouse-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: JWT_SECRET
        generateValue: true
      - key: ALGORITHM
        value: "HS256"
      - key: ACCESS_TOKEN_EXPIRE_MINUTES
        value: "30"
      - key: APP_NAME
        value: "TAR Lighthouse API"
      - key: DEBUG
        value: "false"
      - key: ENVIRONMENT
        value: "production"
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: HOST
        value: "0.0.0.0"
      - key: SERVER_REGION
        value: "singapore"
      - key: CLOUDFRONT_BYPASS_REGION
        value: "sg"
      - key: CORS_ORIGINS
        value: "https://tar-lighthouse-static.onrender.com,https://tarlight.com,http://localhost:3000"
      - key: SERVE_STATIC
        value: "false"

  # Consolidated Background Worker - Handles all background tasks
  - type: worker
    name: tar-lighthouse-worker
    env: python
    plan: starter
    region: singapore
    buildCommand: "pip install -r requirements.txt"
    startCommand: "sleep 45 && export PYTHONPATH=/opt/render/project/src && python services/worker.py"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: tar-lighthouse-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: ALGORITHM
        value: "HS256"
      - key: APP_NAME
        value: "TAR Lighthouse Worker"
      - key: DEBUG
        value: "false"
      - key: ENVIRONMENT
        value: "production"
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: SERVER_REGION
        value: "singapore"
      - key: CLOUDFRONT_BYPASS_REGION
        value: "sg"
      # Worker will handle:
      # - Bot instance monitoring
      # - Strategy monitoring
      # - Balance history tracking
      # - Trade monitoring
      # - All console logs routing

  # Decter Engine Service - Trading Bot Engine
  - type: worker
    name: tar-decter-engine
    env: python
    plan: starter
    region: singapore
    buildCommand: |
      pip install -r requirements.txt
      # Ensure Decter directory exists
      if [ ! -d "Decter" ]; then
        echo "Decter directory not found, creating placeholder"
        mkdir -p Decter/data
        echo "# Decter Engine Placeholder" > Decter/README.md
      fi
    startCommand: "sleep 60 && export PYTHONPATH=/opt/render/project/src && python services/decter_service.py"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: tar-lighthouse-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: APP_NAME
        value: "TAR Decter Engine"
      - key: DEBUG
        value: "false"
      - key: ENVIRONMENT
        value: "production"
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: DECTER_PATH
        value: "Decter"
      - key: SERVER_REGION
        value: "singapore"
      - key: CLOUDFRONT_BYPASS_REGION
        value: "sg"

# Database Configuration
databases:
  - name: tar-lighthouse-db
    region: singapore
    databaseName: tar_lighthouse_db
    user: tar_lighthouse_user
    postgresMajorVersion: 15